version: '3'

services:
  api-gateway:
    image: dc-api-gateway:local
    container_name: dc-api-gateway
    environment:
      HTTP_PORT: 8000
      WORKERS_MONITORING_PERIOD_MS: 30000
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8000:8000"
    depends_on:
      goose:
        condition: service_completed_successfully

  auth:
    image: dc-auth:local
    container_name: dc-auth
    environment:
      CONFIG_PATH: ./configs/local.yml
      JWT_SIGNATURE: ${JWT_SIGNATURE}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - "44044:44044"
    depends_on:
      goose-auth:
        condition: service_completed_successfully

  postgres:
    image: postgres:14-alpine
    container_name: distributed-calculator-psql
    ports:
      - "5002:5432"
    environment:
      - POSTGRES_DB=distributed-calculator-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s
      timeout: 15s
      retries: 5

  goose:
    image: artsafin/goose-migrations:latest
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./api-gateway/db/migrations:/db/migrations
    environment:
      GOOSE_DRIVER: postgres
      GOOSE_DBSTRING: "postgres://postgres:${DB_PASSWORD}@postgres:5432/distributed-calculator-db?sslmode=disable"
    command: ["-dir", "/db/migrations", "up"]

  pg-auth:
    image: postgres:14-alpine
    container_name: dc-auth-db
    ports:
      - "5003:5003"
    expose:
      - "5003"
    command: -p 5003
    environment:
      - POSTGRES_DB=auth-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./auth/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -p 5003" ]
      interval: 5s
      timeout: 10s
      retries: 5

  goose-auth:
    image: artsafin/goose-migrations:latest
    depends_on:
      pg-auth:
        condition: service_healthy
    volumes:
      - ./auth/db/migrations:/db/migrations
    environment:
      GOOSE_DRIVER: postgres
      GOOSE_DBSTRING: "postgres://postgres:${DB_PASSWORD}@pg-auth:5003/auth-db?sslmode=disable"
    command: [ "-dir", "/db/migrations", "up" ]

  daemon1:
    depends_on:
      - api-gateway
    image: dc-daemon:local
    container_name: dc-daemon-1
    environment:
      HTTP_PORT: 8001
      DAEMON_ID: 1
      DAEMON_HOST: "http://daemon1:8001" 
      ORCHESTRATOR_HOST: "http://api-gateway:8000"
      PING_PERIOD_MS: 25000
      MAX_GOROUTINES: 1
    ports:
      - "8001:8001"

  daemon2:
    depends_on:
      - api-gateway
    image: dc-daemon:local
    container_name: dc-daemon-2
    environment:
      HTTP_PORT: 8002
      DAEMON_ID: 2
      DAEMON_HOST: "http://daemon2:8002" 
      ORCHESTRATOR_HOST: "http://api-gateway:8000"
      PING_PERIOD_MS: 25000
      MAX_GOROUTINES: 5
    ports:
      - "8002:8002"

  page-parser:
    depends_on:
      - api-gateway
    image: dc-page-parser:local
    container_name: dc-page-parser
    environment:
      HTTP_PORT: "8080"
      ORCHESTRATOR_HOST: "http://localhost:8000"
    ports:
      - "8080:8080"